{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\React Course\\\\Chef-Claude\\\\chef\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport IngredientsList from \"./IngredientsList\";\nimport \"./Main.css\";\nimport { useState } from \"react\";\nimport ClaudeRecipe from \"./ClaudeRecipe\";\nimport { getRecipeFromMistral } from \"../ai.js\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  const [recipe, setRecipe] = useState(\"\");\n  const recipeSection = useRef(null);\n  console.log(recipeSection);\n  const ingredientsListItems = ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: ingredient\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n  useEffect(() => {\n    if (recipeSection.current) {\n      recipeSection.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [recipe]);\n  async function getRecipe() {\n    const recipeMarkdown = await getRecipeFromMistral(ingredients);\n    setRecipe(recipeMarkdown);\n  }\n  function addIngredient(formData) {\n    const newIngredient = formData.get(\"ingredient\");\n    setIngredients(prevIngredients => [...prevIngredients, newIngredient]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: addIngredient,\n      className: \"add-ingredient-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. oregano\",\n        \"aria-label\": \"Add ingredient\",\n        name: \"ingredient\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), ingredientsListItems.length > 0 && /*#__PURE__*/_jsxDEV(IngredientsList, {\n      ref: recipeSection,\n      ingredients: ingredientsListItems,\n      recipeReady: getRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this), recipe && /*#__PURE__*/_jsxDEV(ClaudeRecipe, {\n      recipe: recipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"7tu610ODyFwf8UkMpi1hfjvjpRw=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["IngredientsList","useState","ClaudeRecipe","getRecipeFromMistral","useRef","useEffect","jsxDEV","_jsxDEV","Main","_s","ingredients","setIngredients","recipe","setRecipe","recipeSection","console","log","ingredientsListItems","map","ingredient","index","children","fileName","_jsxFileName","lineNumber","columnNumber","current","scrollIntoView","behavior","getRecipe","recipeMarkdown","addIngredient","formData","newIngredient","get","prevIngredients","action","className","type","placeholder","name","autoFocus","length","ref","recipeReady","_c","$RefreshReg$"],"sources":["F:/React/React Course/Chef-Claude/chef/src/components/Main.jsx"],"sourcesContent":["import IngredientsList from \"./IngredientsList\";\r\nimport \"./Main.css\";\r\nimport { useState } from \"react\";\r\nimport ClaudeRecipe from \"./ClaudeRecipe\";\r\nimport {getRecipeFromMistral} from \"../ai.js\";\r\nimport {useRef} from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nexport default function Main() {\r\n    const [ingredients, setIngredients] = useState([]);\r\n    const [recipe, setRecipe] = useState(\"\");\r\n    const recipeSection = useRef(null);\r\n    console.log(recipeSection);\r\n    const ingredientsListItems = ingredients.map((ingredient, index) => (\r\n        <li key={index}>{ingredient}</li>\r\n    ))\r\n\r\n    useEffect(() => {\r\n        if (recipeSection.current) {\r\n            recipeSection.current.scrollIntoView({behavior: \"smooth\"});\r\n        }\r\n    }, [recipe]);\r\n\r\n\r\n    async function getRecipe() {\r\n        const recipeMarkdown = await getRecipeFromMistral(ingredients);\r\n        setRecipe(recipeMarkdown);        \r\n    }\r\n    function addIngredient(formData){\r\n        const newIngredient = formData.get(\"ingredient\");\r\n        setIngredients(prevIngredients => [...prevIngredients, newIngredient]);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <form action={addIngredient}className=\"add-ingredient-form\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"e.g. oregano\"\r\n                    aria-label=\"Add ingredient\"\r\n                    name = \"ingredient\"\r\n                    autoFocus = {true}\r\n                />\r\n                <button>Add ingredient</button>\r\n                </form>\r\n                {ingredientsListItems.length > 0 &&\r\n                    <IngredientsList \r\n                    ref={recipeSection}\r\n                    ingredients={ingredientsListItems}\r\n                    recipeReady={getRecipe}\r\n                />\r\n                }\r\n                {recipe && <ClaudeRecipe \r\n                    recipe={recipe}\r\n                />}\r\n            \r\n        </main>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAC/C,OAAO,YAAY;AACnB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAAQC,oBAAoB,QAAO,UAAU;AAC7C,SAAQC,MAAM,QAAO,OAAO;AAC5B,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMa,aAAa,GAAGV,MAAM,CAAC,IAAI,CAAC;EAClCW,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;EAC1B,MAAMG,oBAAoB,GAAGP,WAAW,CAACQ,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAC3Db,OAAA;IAAAc,QAAA,EAAiBF;EAAU,GAAlBC,KAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB,CACnC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACZ,IAAIS,aAAa,CAACY,OAAO,EAAE;MACvBZ,aAAa,CAACY,OAAO,CAACC,cAAc,CAAC;QAACC,QAAQ,EAAE;MAAQ,CAAC,CAAC;IAC9D;EACJ,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAGZ,eAAeiB,SAASA,CAAA,EAAG;IACvB,MAAMC,cAAc,GAAG,MAAM3B,oBAAoB,CAACO,WAAW,CAAC;IAC9DG,SAAS,CAACiB,cAAc,CAAC;EAC7B;EACA,SAASC,aAAaA,CAACC,QAAQ,EAAC;IAC5B,MAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAG,CAAC,YAAY,CAAC;IAChDvB,cAAc,CAACwB,eAAe,IAAI,CAAC,GAAGA,eAAe,EAAEF,aAAa,CAAC,CAAC;EAC1E;EAEA,oBACI1B,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAM6B,MAAM,EAAEL,aAAc;MAAAM,SAAS,EAAC,qBAAqB;MAAAhB,QAAA,gBACvDd,OAAA;QACI+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1B,cAAW,gBAAgB;QAC3BC,IAAI,EAAG,YAAY;QACnBC,SAAS,EAAI;MAAK;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFlB,OAAA;QAAAc,QAAA,EAAQ;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EACNR,oBAAoB,CAACyB,MAAM,GAAG,CAAC,iBAC5BnC,OAAA,CAACP,eAAe;MAChB2C,GAAG,EAAE7B,aAAc;MACnBJ,WAAW,EAAEO,oBAAqB;MAClC2B,WAAW,EAAEf;IAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EAEDb,MAAM,iBAAIL,OAAA,CAACL,YAAY;MACpBU,MAAM,EAAEA;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEf;AAAChB,EAAA,CAlDuBD,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}